// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using QL_CTDT.Data.Models.EF;

#nullable disable

namespace QL_CTDT.Data.Migrations
{
    [DbContext(typeof(TrainingProgramDbContext))]
    [Migration("20231106144802_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.ChiTietCTDT", b =>
                {
                    b.Property<string>("MaChiTietCTDT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDanhMucCTDT_KKT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaHocPhan")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaChiTietCTDT");

                    b.HasIndex("MaDanhMucCTDT_KKT");

                    b.HasIndex("MaHocPhan");

                    b.ToTable("ChiTietCTDTs");

                    b.HasData(
                        new
                        {
                            MaChiTietCTDT = "1",
                            MaDanhMucCTDT_KKT = "CTDT_KKT_1",
                            MaHocPhan = "HP1"
                        },
                        new
                        {
                            MaChiTietCTDT = "2",
                            MaDanhMucCTDT_KKT = "CTDT_KKT_2",
                            MaHocPhan = "HP2"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT", b =>
                {
                    b.Property<string>("MaDanhMucCTDT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhoaHoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDanhMucCTDT");

                    b.HasIndex("MaKhoa");

                    b.HasIndex("MaKhoaHoc");

                    b.ToTable("DanhMucCTDTs");

                    b.HasData(
                        new
                        {
                            MaDanhMucCTDT = "CTDT1",
                            MaKhoa = "K1",
                            MaKhoaHoc = "KH1"
                        },
                        new
                        {
                            MaDanhMucCTDT = "CTDT2",
                            MaKhoa = "K2",
                            MaKhoaHoc = "KH2"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT_KKT", b =>
                {
                    b.Property<string>("MaDanhMucCTDT_KKT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaDanhMucCTDT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKKT")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("MaDanhMucCTDT_KKT");

                    b.HasIndex("MaDanhMucCTDT");

                    b.HasIndex("MaKKT");

                    b.ToTable("DanhMucCTDT_KKTs");

                    b.HasData(
                        new
                        {
                            MaDanhMucCTDT_KKT = "CTDT_KKT_1",
                            MaDanhMucCTDT = "CTDT1",
                            MaKKT = "KKT1"
                        },
                        new
                        {
                            MaDanhMucCTDT_KKT = "CTDT_KKT_2",
                            MaDanhMucCTDT = "CTDT1",
                            MaKKT = "KKT2"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.HocPhan", b =>
                {
                    b.Property<string>("MaHocPhan")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("KhoiKienThucMaKKT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoTinChi")
                        .HasColumnType("int");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaHocPhan");

                    b.HasIndex("KhoiKienThucMaKKT");

                    b.HasIndex("MaKhoa");

                    b.ToTable("HocPhans");

                    b.HasData(
                        new
                        {
                            MaHocPhan = "HP1",
                            MaKhoa = "K1",
                            MoTa = "Mô tả học phần Lập trình C++",
                            SoTinChi = 3,
                            Ten = "Lập trình C++"
                        },
                        new
                        {
                            MaHocPhan = "HP2",
                            MaKhoa = "K2",
                            MoTa = "Mô tả học phần Kế toán tài chính",
                            SoTinChi = 3,
                            Ten = "Kế toán tài chính"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.Khoa", b =>
                {
                    b.Property<string>("MaKhoa")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhoa");

                    b.ToTable("Khoas");

                    b.HasData(
                        new
                        {
                            MaKhoa = "K1",
                            MoTa = "Mô tả khoa Kỹ thuật",
                            Ten = "Khoa Kỹ thuật"
                        },
                        new
                        {
                            MaKhoa = "K2",
                            MoTa = "Mô tả khoa Kinh tế",
                            Ten = "Khoa Kinh tế"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.KhoaHoc", b =>
                {
                    b.Property<string>("MaKhoaHoc")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("NgayBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("NgayKetThuc")
                        .HasColumnType("datetime2");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaKhoaHoc");

                    b.ToTable("KhoaHocs");

                    b.HasData(
                        new
                        {
                            MaKhoaHoc = "KH1",
                            MoTa = "Mô tả khóa học Kỹ thuật phần mềm",
                            NgayBatDau = new DateTime(2023, 11, 6, 21, 48, 1, 855, DateTimeKind.Local).AddTicks(9214),
                            NgayKetThuc = new DateTime(2023, 12, 6, 21, 48, 1, 855, DateTimeKind.Local).AddTicks(9226),
                            Ten = "Khóa học Kỹ thuật phần mềm"
                        },
                        new
                        {
                            MaKhoaHoc = "KH2",
                            MoTa = "Mô tả khóa học Quản trị kinh doanh",
                            NgayBatDau = new DateTime(2023, 11, 6, 21, 48, 1, 855, DateTimeKind.Local).AddTicks(9235),
                            NgayKetThuc = new DateTime(2023, 12, 6, 21, 48, 1, 855, DateTimeKind.Local).AddTicks(9235),
                            Ten = "Khóa học Quản trị kinh doanh"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.KhoiKienThuc", b =>
                {
                    b.Property<string>("MaKKT")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MaKKT");

                    b.ToTable("KhoiKienThucs");

                    b.HasData(
                        new
                        {
                            MaKKT = "KKT1",
                            MoTa = "Mô tả khối kiến thức 1",
                            Ten = "Khối kiến thức 1"
                        },
                        new
                        {
                            MaKKT = "KKT2",
                            MoTa = "Mô tả khối kiến thức 2",
                            Ten = "Khối kiến thức 2"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.Nganh", b =>
                {
                    b.Property<string>("MaNganh")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MaKhoa")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNganh");

                    b.HasIndex("MaKhoa");

                    b.ToTable("Nganhs");

                    b.HasData(
                        new
                        {
                            MaNganh = "N1",
                            MaKhoa = "K1",
                            MoTa = "Mô tả ngành Công nghệ thông tin",
                            Ten = "Ngành Công nghệ thông tin"
                        },
                        new
                        {
                            MaNganh = "N2",
                            MaKhoa = "K2",
                            MoTa = "Mô tả ngành Kế toán",
                            Ten = "Ngành Kế toán"
                        });
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.ChiTietCTDT", b =>
                {
                    b.HasOne("QL_CTDT.Data.Models.Entities.DanhMucCTDT_KKT", "DanhMucCTDT_KKT")
                        .WithMany("ChiTietCTDTs")
                        .HasForeignKey("MaDanhMucCTDT_KKT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QL_CTDT.Data.Models.Entities.HocPhan", "HocPhan")
                        .WithMany("ChiTietCTDTs")
                        .HasForeignKey("MaHocPhan")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DanhMucCTDT_KKT");

                    b.Navigation("HocPhan");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT", b =>
                {
                    b.HasOne("QL_CTDT.Data.Models.Entities.Khoa", "Khoa")
                        .WithMany("DanhMucCTDTs")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QL_CTDT.Data.Models.Entities.KhoaHoc", "KhoaHoc")
                        .WithMany("DanhMucCTDTs")
                        .HasForeignKey("MaKhoaHoc")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Khoa");

                    b.Navigation("KhoaHoc");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT_KKT", b =>
                {
                    b.HasOne("QL_CTDT.Data.Models.Entities.DanhMucCTDT", "DanhMucCTDT")
                        .WithMany("DanhMucCTDT_KKTs")
                        .HasForeignKey("MaDanhMucCTDT")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("QL_CTDT.Data.Models.Entities.KhoiKienThuc", "KhoiKienThuc")
                        .WithMany("DanhMucCTDT_KKTs")
                        .HasForeignKey("MaKKT")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("DanhMucCTDT");

                    b.Navigation("KhoiKienThuc");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.HocPhan", b =>
                {
                    b.HasOne("QL_CTDT.Data.Models.Entities.KhoiKienThuc", null)
                        .WithMany("HocPhans")
                        .HasForeignKey("KhoiKienThucMaKKT");

                    b.HasOne("QL_CTDT.Data.Models.Entities.Khoa", "Khoa")
                        .WithMany("HocPhans")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.Nganh", b =>
                {
                    b.HasOne("QL_CTDT.Data.Models.Entities.Khoa", "Khoa")
                        .WithMany("Nganhs")
                        .HasForeignKey("MaKhoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Khoa");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT", b =>
                {
                    b.Navigation("DanhMucCTDT_KKTs");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.DanhMucCTDT_KKT", b =>
                {
                    b.Navigation("ChiTietCTDTs");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.HocPhan", b =>
                {
                    b.Navigation("ChiTietCTDTs");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.Khoa", b =>
                {
                    b.Navigation("DanhMucCTDTs");

                    b.Navigation("HocPhans");

                    b.Navigation("Nganhs");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.KhoaHoc", b =>
                {
                    b.Navigation("DanhMucCTDTs");
                });

            modelBuilder.Entity("QL_CTDT.Data.Models.Entities.KhoiKienThuc", b =>
                {
                    b.Navigation("DanhMucCTDT_KKTs");

                    b.Navigation("HocPhans");
                });
#pragma warning restore 612, 618
        }
    }
}
